syntax = "proto3";
option go_package = "github.com/my-epoch/object_service/gen";
package object_service_api;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message Object {
  uint32 id = 1;
  string title = 2;
  string main_image_uuid = 3;
  string description = 4;

  float latitude = 5;
  float longitude = 6;
}

message StatusRequest {

}

message StatusResponse {
  string status = 1;
  string time = 2;
}

message GetByIdRequest {
  uint32 id = 1;
}

message GetByIdResponse {
  Object object = 1;
}

message CreateRequest {
  string title = 1;
  string main_image_uuid = 2;
  string description = 3;
  float latitude = 4;
  float longitude = 5;
}

message CreateResponse {
  Object object = 1;
}

message UpdateRequest {
  uint32 id = 1;
  string title = 2;
  string main_image_uuid = 3;
  string description = 4;
  float latitude = 5;
  float longitude = 6;
}

message UpdateResponse {
  Object object = 1;
}

message GetListRequest {
  int32 quantity = 1;
  int32 offset = 2;
}

message GetListResponse {
  repeated Object objects = 1;
}

message SearchRequest {
  string query = 1;
}

message SearchResponse {
  repeated Object objects = 1;
}

message DeleteRequest {
  uint32 id = 1;
}

message DeleteResponse {
  string status = 1;
}

service ObjectServiceAPI {
  rpc Status (StatusRequest) returns (StatusResponse) {
    option (google.api.http) = {
      get: "/api/v1/object/status"
    };
  };

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/object",
      body: "*"
    };
  }

  rpc GetById(GetByIdRequest) returns (GetByIdResponse) {
    option (google.api.http) = {
      get: "/api/v1/object/{id}"
    };
  }

  rpc GetList(GetListRequest) returns (GetListResponse) {
    option (google.api.http) = {
      get: "/api/v1/objects"
    };
  }

  rpc Search(SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
      get: "/api/v1/objects/search"
    };
  }

  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      put: "/api/v1/object/{id}",
      body: "*"
    };
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/object/{id}"
    };
  }
}